HTML

<div class="container">
  <h2>Cadastro de Alunos</h2>
  <form (submit)="addStudent()">
    <div class="form-group">
      <label for="firstName">Nome:</label>
      <input type="text" class="form-control" id="firstName" name="firstName" [(ngModel)]="newStudent.firstName" required>
    </div>
    <div class="form-group">
      <label for="lastName">Sobrenome:</label>
      <input type="text" class="form-control" id="lastName" name="lastName" [(ngModel)]="newStudent.lastName" required>
    </div>
    <div class="form-group">
      <label for="email">Email:</label>
      <input type="email" class="form-control" id="email" name="email" [(ngModel)]="newStudent.email" required>
    </div>
    <div class="form-group">
      <label for="idade">idade:</label>
      <input type="idade" class="form-control" id="idade" name="idade" [(ngModel)]="newStudent.idade" required>
    </div>
    <div class="form-group">
      <label for="matricula">matricula:</label>
      <input type="matricula" class="form-control" id="matricula" name="matrcula" [(ngModel)]="newStudent.matricula" required>
    </div>


    <button type="submit" class="btn btn-primary">Cadastrar</button>
  </form>


  <h2>Alunos Cadastrados</h2>
  <ul>
    <li *ngFor="let student of students">
      Nome: {{ student.firstName }},<br> Sobrenome: {{ student.lastName }},<br> Email: {{ student.email }},<br> idade: {{student.idade}},<br> matricula:{{student.matricula}} <br>
    </li>
  </ul>
</div>

APP.COMPONENT.TS


import { Component } from '@angular/core';


@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css'],
})
export class AppComponent {
  students: any[] = [];
  newStudent: any = {};


  addStudent() {
    const duplicado = this.students.some(
      (student) => student.firstName === this.newStudent.firstName
    );


    if (!duplicado) {
      this.students.push({ ...this.newStudent }); //Adiciona
      this.newStudent = {}; // Limpa o objeto para o próximo cadastro
    } else {
      alert('Este aluno já foi cadastrado');
    }
  }
}



/* You can add global styles to this file, and also import other style files *
/* Estilização básica para o container */
.container {
  max-width: 600px;
  margin: 0 auto;
  padding: 36px;
  background-color: #9ada52;
  border: 1px solid #23380c;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

/* Estilo para cabeçalho h2 */
h2 {
  font-size: 35px;
  margin-bottom: 30px;
}

/* Estilo para os campos de entrada e rótulos */
.form-group {
  margin-bottom: 15px;
}

label {
  display: block;
  font-weight: bold;
}

input[type="text"],
input[type="email"] {
  width: 100%;
  padding: 12px;
  font-size: 14px;
  border: 5px solid #145029;
  border-radius: 10px;
}

/* Estilo para o botão de cadastrar */
button[type="submit"] {
  background-color: rgb(146, 119, 119);
  color: #291313;
  padding: 10px 20px;
  font-size: 15px;
  border: groove;
  border-radius: 5px;
  cursor: pointer;
}

button[type="submit"]:hover {
  background-color: #272121;
}

/* Estilo para a lista de alunos cadastrados */
ul {
  list-style-type: lower-greek;
  padding: 5;
}

li {
  margin-bottom: 11px;
}


import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { FormsModule } from '@angular/forms';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
